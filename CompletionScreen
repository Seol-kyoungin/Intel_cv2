package com.example.cv2

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.*
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.cv2.ui.theme.CV2Theme

class CompletionScreen : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            CV2Theme {
                Surface(modifier = Modifier.fillMaxSize(), color = Color(0xFFF5F5F5)) {
                    CompletionScreenContent(
                        completionDate = "2024-07-10",
                        progressRate = "100%",
                        concentrationRate = "88%",
                        certificationStatus = "수료"
                    )
                }
            }
        }
    }
}

@OptIn(ExperimentalMaterial3Api::class)
@Composable
fun CompletionScreenContent(
    completionDate: String,
    progressRate: String,
    concentrationRate: String,
    certificationStatus: String
) {

    Box(
        modifier = Modifier
            .fillMaxSize()
    ) {
        Image(
            painter = painterResource(id = R.drawable.bg),
            contentDescription = null,
            modifier = Modifier.fillMaxSize()
        )
        Column(
            modifier = Modifier
                .fillMaxSize()
                .padding(16.dp)
                .verticalScroll(rememberScrollState()),
            horizontalAlignment = Alignment.CenterHorizontally
        ) {
            Spacer(modifier = Modifier.height(40.dp))

            Text(
                text = "수강 완료",
                fontSize = 24.sp,
                fontWeight = FontWeight.Bold,
                color = Color(0xFF1F41BB)
            )

            Spacer(modifier = Modifier.height(150.dp))

            Text(
                text = "축하합니다! 모든 교육 동영상을 성공적으로 수강하셨습니다!",
                fontSize = 16.sp,
                color = Color.Black
            )

            Spacer(modifier = Modifier.height(20.dp))

            Column(
                modifier = Modifier.fillMaxWidth(),
                horizontalAlignment = Alignment.Start
            ) {
                Text(text = "• 수강 완료 날짜: [$completionDate]", fontSize = 14.sp, color = Color.Black)
                Text(text = "• 수료증은 이메일로 발송되었습니다.", fontSize = 14.sp, color = Color.Black)
                Text(
                    text = "• 다음 교육 일정은 [10월]입니다. 잊지 말고 참여해 주세요!",
                    fontSize = 14.sp,
                    color = Color.Black
                )
            }

            Spacer(modifier = Modifier.height(20.dp))

            Text(
                text = "산업 재해 방지를 위한 중요한 교육에 참여해 주셔서 감사합니다.\n앞으로도 안전한 근무 환경을 유지하는 데 기여해 주시길 바랍니다.",
                fontSize = 14.sp,
                color = Color.Black
            )

            Spacer(modifier = Modifier.height(80.dp))

            InfoBox(label = "진도율", value = progressRate)
            Spacer(modifier = Modifier.height(20.dp))
            InfoBox(label = "집중도", value = concentrationRate)
            Spacer(modifier = Modifier.height(20.dp))
            InfoBox(label = "수료 여부", value = certificationStatus)

            Spacer(modifier = Modifier.height(20.dp))

            Text(
                text = "공유하기",
                fontSize = 14.sp,
                color = Color.Black,
                modifier = Modifier.align(Alignment.End)
            )
        }
    }
}
@Composable
fun InfoBox(label: String, value: String) {
    Box(
        modifier = Modifier
            .fillMaxWidth()
            .padding(horizontal = 16.dp)
            .background(Color.White, RoundedCornerShape(8.dp))
            .border(width = 1.dp, color = Color.Black, shape = RoundedCornerShape(8.dp))
            .padding(16.dp)
    ) {
        Row(
            modifier = Modifier.fillMaxWidth(),
            horizontalArrangement = Arrangement.SpaceBetween
        ) {
            Text(text = label, fontSize = 16.sp, color = Color.Black)
            Text(
                text = value,
                fontSize = 16.sp,
                color = if (label == "수료 여부") Color(0xFF1F41BB) else Color.Black
            )
        }
    }
}

@Preview(showBackground = true)
@Composable
fun CompletionScreenPreview() {
    CV2Theme {
        CompletionScreenContent(
            completionDate = "2024-07-10",
            progressRate = "100%",
            concentrationRate = "88%",
            certificationStatus = "수료"
        )
    }
}
